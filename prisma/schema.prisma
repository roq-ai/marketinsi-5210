generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model financial_service {
  id                   String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                 String        @db.VarChar(255)
  description          String?       @db.VarChar(255)
  organization_id      String?       @db.Uuid
  financial_advisor_id String?       @db.Uuid
  created_at           DateTime      @default(now()) @db.Timestamp(6)
  updated_at           DateTime      @default(now()) @db.Timestamp(6)
  user                 user?         @relation(fields: [financial_advisor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  organization         organization? @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model organization {
  id                String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description       String?             @db.VarChar(255)
  image             String?             @db.VarChar(255)
  name              String              @db.VarChar(255)
  created_at        DateTime            @default(now()) @db.Timestamp(6)
  updated_at        DateTime            @default(now()) @db.Timestamp(6)
  user_id           String              @db.Uuid
  tenant_id         String              @db.VarChar(255)
  financial_service financial_service[]
  user              user                @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  wealth_product    wealth_product[]
}

model user {
  id                String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email             String              @unique @db.VarChar(255)
  firstName         String?             @db.VarChar(255)
  lastName          String?             @db.VarChar(255)
  roq_user_id       String              @db.VarChar(255)
  tenant_id         String              @db.VarChar(255)
  created_at        DateTime            @default(now()) @db.Timestamp(6)
  updated_at        DateTime            @default(now()) @db.Timestamp(6)
  financial_service financial_service[]
  organization      organization[]
  wealth_product    wealth_product[]
}

model wealth_product {
  id                String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name              String        @db.VarChar(255)
  description       String?       @db.VarChar(255)
  organization_id   String?       @db.Uuid
  wealth_manager_id String?       @db.Uuid
  created_at        DateTime      @default(now()) @db.Timestamp(6)
  updated_at        DateTime      @default(now()) @db.Timestamp(6)
  organization      organization? @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user              user?         @relation(fields: [wealth_manager_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
